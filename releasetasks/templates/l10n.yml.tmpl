{% for platform, platform_info in l10n_config["platforms"].iteritems() %}
{% for chunk in range(1, platform_info["chunks"]+1) %}
{% set our_locales = chunkify(sorted(platform_info["locales"]), chunk, platform_info["chunks"]) %}
# TODO: make a helper function to generate consistent builder names?
{% set buildername = "release-{}_{}_{}_l10n_repack".format(branch, product, platform) %}
-
    # We have multiple chunks of l10n per platform, so we need unique task ids
    # for each of them. However, they all share the same builder because the
    # only differences between them are in the properties that we set.
    taskId: "{{ stableSlugId('{}_{}'.format(buildername, chunk)) }}"
    reruns: 5
    task:
        provisionerId: "buildbot-bridge"
        workerType: "buildbot-bridge"
        created: "{{ now }}"
        deadline: "{{ now.replace(hours=36) }}"
        expires: "{{ never }}"
        priority: "high"
        retries: 5
        scopes:
            - buildbot-bridge:builder-name:{{ buildername }}

        payload:
            buildername: "{{ buildername }}"
            sourcestamp:
                branch: "{{ repo_path }}"
                revision: "{{ revision }}"
            properties:
                product: "{{ product }}"
                en_us_binary_url: "{{ platform_info['en_us_binary_url'] }}"
                # Quotes cannot be used around this string because the loop causes it to have trailing whitespace
                # (which gets stripped by the yaml parser when unquoted). Kindof hacky.
                locales: {% for l in our_locales %}{{ "{}:{} ".format(l, l10n_config["changesets"][l]) }}{% endfor %}
                version: {{ version }}
                build_number: {{ buildNumber }}

        metadata:
            name: "{{ product }} {{ branch }} {{ platform }} l10n repack {{ chunk }}/{{ platform_info["chunks"] }}"
            description: "Release Promotion l10n repack job"
            owner: "release@mozilla.com"
            source: https://github.com/mozilla/releasetasks

        {% if running_tests is defined %}
        extra:
            task_name: "{{ buildername }}_{{ chunk }}"
        {% endif %}

{% endfor %}
{% endfor %}

# TODO: include funsize
