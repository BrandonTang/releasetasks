{% set buildername = "{}_source".format(branch) %}
{% set buildername_signing = "{}_signing".format(buildername) %}
-
    taskId: "{{ stableSlugId(buildername) }}"
    reruns: 5
    task:
        provisionerId: aws-provisioner-v1
        workerType: opt-linux64
        created: "{{ now }}"
        deadline: "{{ now.replace(hours=6) }}"
        expires: "{{ never }}"
        priority: "high"
        retries: 5
        scopes:
            - docker-worker:cache:tc-vcs
            - docker-worker:image:taskcluster/builder:0.5.9
            - queue:define-task:aws-provisioner-v1/opt-linux64
            - queue:create-task:aws-provisioner-v1/opt-linux64
            - queue:define-task:aws-provisioner-v1/build-c4-2xlarge
            - queue:create-task:aws-provisioner-v1/build-c4-2xlarge
            - docker-worker:cache:build-{{ branch }}-release-workspace
            - docker-worker:cache:tooltool-cache
            - docker-worker:relengapi-proxy:tooltool.download.public

        payload:
            maxRunTime: 7200
            image: taskcluster/desktop-build:0.1.11
            cache:
                build-{{ branch }}-release-workspace: /home/worker/workspace
                tooltool-cache: /home/worker/tooltool-cache
                tc-vcs: /home/worker/.tc-vcs
            artifacts:
                public/build:
                    path: /home/worker/artifacts/
                    expires: {{ now.replace(days=365) }}
                    type: directory
            command:
                - /bin/bash
                - bin/build.sh
            env:
                GECKO_REPOSITORY: "https://hg.mozilla.org/{{ repo_path }}"
                GECKO_HEAD_REV: "{{ revision }}"
                MOZHARNESS_SCRIPT: "mozharness/scripts/fx_desktop_build.py"
                MOZHARNESS_CONFIG: "builds/releng_sub_linux_configs/64_source.py"
                # MH_BRANCH is used for branch specific MH configs
                MH_BRANCH: "{{ branch }}"
                MH_BUILD_POOL: "taskcluster"
                # Don't clone mozharness, use the in-tree version
                MOZHARNESS_DISABLE: "true"
                TOOLTOOL_CACHE: "/home/worker/tooltool-cache"
                DIST_TARGET_UPLOADS: "source.tar.xz bundle"
        metadata:
            owner: release@mozilla.com
            source: https://github.com/mozilla/releasetasks
            name: "{{ branch }} source generation"
            description: |
                Generates a source tarball

        {% if running_tests is defined %}
        extra:
            task_name: "{{ buildername }}"
        {% endif %}

        {# TODO: decide what to use here...
        treeherder:
            symbol: S
            groupSymbol: Release
            collection:
                opt: true
            machine:
                platform: none
            build:
                platform: none
        #}
-
    taskId: "{{ stableSlugId(buildername_signing) }}"
    requires:
        - "{{ stableSlugId(buildername) }}"
    reruns: 5
    task:
        provisionerId: signing-provisioner-v1
        workerType: signing-worker-v1
        created: "{{ now }}"
        deadline: "{{ now.replace(hours=6) }}"
        expires: "{{ never }}"
        priority: "high"
        retries: 5
        scopes:
            - signing:format:gpg
            - signing:cert:{{ signing_class }}
        payload:
            signingManifest: https://queue.taskcluster.net/v1/task/{{ stableSlugId(buildername) }}/artifacts/public/env/manifest.json
        metadata:
            owner: release@mozilla.com
            source: https://github.com/mozillla/releasetasks
            name: "{{ branch }} source signing"
            description: |
                Sign source tarball

        {% if running_tests is defined %}
        extra:
            task_name: "{{ buildername_signing }}"
        {% endif %}
